{"id":"scenes/game.js","dependencies":[{"name":"C:\\Users\\Chaos\\Desktop\\31-card-game\\31-client\\package.json","includedInParent":true,"mtime":1608611293910},{"name":"../scenes/BootScene.js","loc":{"line":1,"column":22},"parent":"C:\\Users\\Chaos\\Desktop\\31-card-game\\31-client\\src\\scenes\\game.js","resolved":"C:\\Users\\Chaos\\Desktop\\31-card-game\\31-client\\src\\scenes\\BootScene.js"},{"name":"../scenes/PreloaderScene.js","loc":{"line":2,"column":27},"parent":"C:\\Users\\Chaos\\Desktop\\31-card-game\\31-client\\src\\scenes\\game.js","resolved":"C:\\Users\\Chaos\\Desktop\\31-card-game\\31-client\\src\\scenes\\PreloaderScene.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _BootScene = _interopRequireDefault(require(\"../scenes/BootScene.js\"));\n\nvar _PreloaderScene = _interopRequireDefault(require(\"../scenes/PreloaderScene.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Game = /*#__PURE__*/function (_Phaser$Scene) {\n  _inherits(Game, _Phaser$Scene);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _super.call(this, {\n      key: 'Game'\n    });\n  }\n\n  _createClass(Game, [{\n    key: \"preload\",\n    value: function preload() {\n      /*\n      this.load.image('cardBack', 'src/assets/red_joker.svg');\n      this.load.image('cardFront2', 'src/assets/2_of_clubs.svg');\n      this.load.image('cardFront3', 'src/assets/3_of_clubs.svg');\n      this.load.image('cardFront4', 'src/assets/4_of_clubs.svg');\n      this.load.image('cardFront5', 'src/assets/5_of_clubs.svg');\n      this.load.image('cardFront6', 'src/assets/5_of_clubs.svg');\n      this.load.image('brand', 'src/assets/images/logo.png');\n      this.load.image('loading', 'src/assets/images/loading.png');\n      this.load.image('stars', 'src/assets/images/stars.jpg');\n      */\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var self = this; //this.isPlayerA = false;\n      //this.opponentCards = [];\n      //this.totalCards = 52;\n      //self.startGameText.destroy();\n\n      self.scene.add('Boot', _BootScene.default);\n      self.scene.add('Preloader', _PreloaderScene.default);\n      self.scene.start('Boot'); //this.dealText = this.add.text(450, 10, ['DEAL CARDS'])\n    }\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }]);\n\n  return Game;\n}(Phaser.Scene);\n\nexports.default = Game;\n;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"scenes/game.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"scenes/game.js","original":{"line":2,"column":0}},{"name":"Game","generated":{"line":36,"column":4},"source":"scenes/game.js","original":{"line":4,"column":21}},{"generated":{"line":41,"column":0},"source":"scenes/game.js","original":{"line":5,"column":2}},{"generated":{"line":41,"column":18},"source":"scenes/game.js","original":{"line":5,"column":16}},{"generated":{"line":42,"column":0},"source":"scenes/game.js","original":{"line":5,"column":16}},{"generated":{"line":44,"column":0},"source":"scenes/game.js","original":{"line":5,"column":16}},{"generated":{"line":44,"column":29},"source":"scenes/game.js","original":{"line":6,"column":10}},{"name":"key","generated":{"line":45,"column":0},"source":"scenes/game.js","original":{"line":7,"column":6}},{"name":"key","generated":{"line":45,"column":6},"source":"scenes/game.js","original":{"line":7,"column":6}},{"generated":{"line":45,"column":9},"source":"scenes/game.js","original":{"line":7,"column":9}},{"generated":{"line":45,"column":11},"source":"scenes/game.js","original":{"line":7,"column":11}},{"generated":{"line":46,"column":0},"source":"scenes/game.js","original":{"line":6,"column":10}},{"generated":{"line":46,"column":5},"source":"scenes/game.js","original":{"line":5,"column":16}},{"generated":{"line":47,"column":0},"source":"scenes/game.js","original":{"line":9,"column":3}},{"generated":{"line":51,"column":30},"source":"scenes/game.js","original":{"line":11,"column":12}},{"generated":{"line":52,"column":0},"source":"scenes/game.js","original":{"line":12,"column":4}},{"generated":{"line":53,"column":0},"source":"scenes/game.js","original":{"line":13,"column":0}},{"generated":{"line":54,"column":0},"source":"scenes/game.js","original":{"line":14,"column":0}},{"generated":{"line":55,"column":0},"source":"scenes/game.js","original":{"line":15,"column":0}},{"generated":{"line":56,"column":0},"source":"scenes/game.js","original":{"line":16,"column":0}},{"generated":{"line":57,"column":0},"source":"scenes/game.js","original":{"line":17,"column":0}},{"generated":{"line":58,"column":0},"source":"scenes/game.js","original":{"line":18,"column":0}},{"generated":{"line":59,"column":0},"source":"scenes/game.js","original":{"line":19,"column":0}},{"generated":{"line":60,"column":0},"source":"scenes/game.js","original":{"line":20,"column":0}},{"generated":{"line":61,"column":0},"source":"scenes/game.js","original":{"line":21,"column":0}},{"generated":{"line":62,"column":0},"source":"scenes/game.js","original":{"line":22,"column":0}},{"generated":{"line":63,"column":0},"source":"scenes/game.js","original":{"line":23,"column":3}},{"generated":{"line":66,"column":29},"source":"scenes/game.js","original":{"line":25,"column":11}},{"generated":{"line":67,"column":0},"source":"scenes/game.js","original":{"line":26,"column":4}},{"name":"self","generated":{"line":67,"column":10},"source":"scenes/game.js","original":{"line":26,"column":8}},{"generated":{"line":67,"column":14},"source":"scenes/game.js","original":{"line":26,"column":12}},{"generated":{"line":67,"column":17},"source":"scenes/game.js","original":{"line":26,"column":15}},{"generated":{"line":67,"column":21},"source":"scenes/game.js","original":{"line":26,"column":4}},{"generated":{"line":67,"column":22},"source":"scenes/game.js","original":{"line":25,"column":11}},{"generated":{"line":67,"column":23},"source":"scenes/game.js","original":{"line":27,"column":4}},{"generated":{"line":68,"column":0},"source":"scenes/game.js","original":{"line":28,"column":4}},{"generated":{"line":69,"column":0},"source":"scenes/game.js","original":{"line":29,"column":4}},{"generated":{"line":70,"column":0},"source":"scenes/game.js","original":{"line":30,"column":4}},{"name":"self","generated":{"line":72,"column":0},"source":"scenes/game.js","original":{"line":31,"column":4}},{"name":"self","generated":{"line":72,"column":6},"source":"scenes/game.js","original":{"line":31,"column":4}},{"generated":{"line":72,"column":10},"source":"scenes/game.js","original":{"line":31,"column":8}},{"name":"scene","generated":{"line":72,"column":11},"source":"scenes/game.js","original":{"line":31,"column":9}},{"generated":{"line":72,"column":16},"source":"scenes/game.js","original":{"line":31,"column":4}},{"name":"add","generated":{"line":72,"column":17},"source":"scenes/game.js","original":{"line":31,"column":15}},{"generated":{"line":72,"column":20},"source":"scenes/game.js","original":{"line":31,"column":4}},{"generated":{"line":72,"column":21},"source":"scenes/game.js","original":{"line":31,"column":19}},{"generated":{"line":72,"column":27},"source":"scenes/game.js","original":{"line":31,"column":4}},{"name":"BootScene","generated":{"line":72,"column":29},"source":"scenes/game.js","original":{"line":31,"column":27}},{"generated":{"line":72,"column":47},"source":"scenes/game.js","original":{"line":31,"column":4}},{"name":"self","generated":{"line":73,"column":0},"source":"scenes/game.js","original":{"line":32,"column":4}},{"name":"self","generated":{"line":73,"column":6},"source":"scenes/game.js","original":{"line":32,"column":4}},{"generated":{"line":73,"column":10},"source":"scenes/game.js","original":{"line":32,"column":8}},{"name":"scene","generated":{"line":73,"column":11},"source":"scenes/game.js","original":{"line":32,"column":9}},{"generated":{"line":73,"column":16},"source":"scenes/game.js","original":{"line":32,"column":4}},{"name":"add","generated":{"line":73,"column":17},"source":"scenes/game.js","original":{"line":32,"column":15}},{"generated":{"line":73,"column":20},"source":"scenes/game.js","original":{"line":32,"column":4}},{"generated":{"line":73,"column":21},"source":"scenes/game.js","original":{"line":32,"column":19}},{"generated":{"line":73,"column":32},"source":"scenes/game.js","original":{"line":32,"column":4}},{"name":"PreloaderScene","generated":{"line":73,"column":34},"source":"scenes/game.js","original":{"line":32,"column":32}},{"generated":{"line":73,"column":57},"source":"scenes/game.js","original":{"line":32,"column":4}},{"name":"self","generated":{"line":74,"column":0},"source":"scenes/game.js","original":{"line":33,"column":4}},{"name":"self","generated":{"line":74,"column":6},"source":"scenes/game.js","original":{"line":33,"column":4}},{"generated":{"line":74,"column":10},"source":"scenes/game.js","original":{"line":33,"column":8}},{"name":"scene","generated":{"line":74,"column":11},"source":"scenes/game.js","original":{"line":33,"column":9}},{"generated":{"line":74,"column":16},"source":"scenes/game.js","original":{"line":33,"column":4}},{"name":"start","generated":{"line":74,"column":17},"source":"scenes/game.js","original":{"line":33,"column":15}},{"generated":{"line":74,"column":22},"source":"scenes/game.js","original":{"line":33,"column":4}},{"generated":{"line":74,"column":23},"source":"scenes/game.js","original":{"line":33,"column":21}},{"generated":{"line":74,"column":29},"source":"scenes/game.js","original":{"line":33,"column":4}},{"generated":{"line":74,"column":31},"source":"scenes/game.js","original":{"line":25,"column":11}},{"generated":{"line":74,"column":32},"source":"scenes/game.js","original":{"line":34,"column":4}},{"generated":{"line":75,"column":0},"source":"scenes/game.js","original":{"line":35,"column":3}},{"generated":{"line":78,"column":29},"source":"scenes/game.js","original":{"line":37,"column":11}},{"generated":{"line":78,"column":30},"source":"scenes/game.js","original":{"line":39,"column":3}},{"name":"Phaser","generated":{"line":82,"column":2},"source":"scenes/game.js","original":{"line":4,"column":34}},{"generated":{"line":82,"column":8},"source":"scenes/game.js","original":{"line":4,"column":40}},{"name":"Scene","generated":{"line":82,"column":9},"source":"scenes/game.js","original":{"line":4,"column":41}},{"generated":{"line":85,"column":0},"source":"scenes/game.js","original":{"line":41,"column":1}}],"sources":{"scenes/game.js":"import BootScene from '../scenes/BootScene.js';\nimport PreloaderScene from '../scenes/PreloaderScene.js';\n\nexport default class Game extends Phaser.Scene {\n  constructor() {\n    super({\n      key: 'Game',\n    });\n  };\n\n  preload() {\n    /*\n    this.load.image('cardBack', 'src/assets/red_joker.svg');\n    this.load.image('cardFront2', 'src/assets/2_of_clubs.svg');\n    this.load.image('cardFront3', 'src/assets/3_of_clubs.svg');\n    this.load.image('cardFront4', 'src/assets/4_of_clubs.svg');\n    this.load.image('cardFront5', 'src/assets/5_of_clubs.svg');\n    this.load.image('cardFront6', 'src/assets/5_of_clubs.svg');\n    this.load.image('brand', 'src/assets/images/logo.png');\n    this.load.image('loading', 'src/assets/images/loading.png');\n    this.load.image('stars', 'src/assets/images/stars.jpg');\n    */\n  }\n\n  create() {\n    let self = this;\n    //this.isPlayerA = false;\n    //this.opponentCards = [];\n    //this.totalCards = 52;\n    //self.startGameText.destroy();\n    self.scene.add('Boot', BootScene);\n    self.scene.add('Preloader', PreloaderScene);\n    self.scene.start('Boot')\n    //this.dealText = this.add.text(450, 10, ['DEAL CARDS'])\n  }\n\n  update() {\n\n  }\n\n};\n\n"},"lineCount":null}},"error":null,"hash":"bca22fb44dba2bc5d76b55ea7d8aa707","cacheData":{"env":{}}}